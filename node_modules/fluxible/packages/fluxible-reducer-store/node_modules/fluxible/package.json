{
  "name": "fluxible",
  "version": "0.5.4",
  "description": "A pluggable container for isomorphic flux applications",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yahoo/fluxible.git"
  },
  "scripts": {
    "test": "mocha tests/unit/ --recursive --compilers js:babel/register --reporter spec",
    "cover": "istanbul cover --dir artifacts -- _mocha tests/unit/ --recursive --compilers js:babel/register --reporter spec",
    "lint": "eslint lib/ addons/"
  },
  "dependencies": {
    "debug": "^2.0.0",
    "dispatchr": "^0.3.1",
    "es6-promise": "^3.0.2",
    "fluxible-addons-react": "*",
    "is-promise": "^2.0.0",
    "object-assign": "^4.0.1",
    "setimmediate": "^1.0.2"
  },
  "devDependencies": {
    "async": "^1.4.2",
    "babel": "^5.0.2",
    "chai": "^3.2.0",
    "coveralls": "^2.11.1",
    "eslint": "^1.2.1",
    "flux-router-component": "^0.6.0",
    "istanbul": "^0.3.2",
    "jsdom": "^3.1.2",
    "mocha": "^2.0.1",
    "mockery": "^1.4.0",
    "pre-commit": "^1.0.7",
    "react": "0.13.x"
  },
  "author": {
    "name": "Michael Ridgway",
    "email": "mridgway@yahoo-inc.com"
  },
  "contributors": [],
  "licenses": [
    {
      "type": "BSD",
      "url": "https://github.com/yahoo/fluxible/blob/master/LICENSE.md"
    }
  ],
  "keywords": [
    "yahoo",
    "flux",
    "react",
    "fluxible",
    "isomorphic"
  ],
  "readme": "# Fluxible\n\n[![NPM version](https://badge.fury.io/js/fluxible.svg)](http://badge.fury.io/js/fluxible)\n[![Build Status](https://img.shields.io/travis/yahoo/fluxible.svg)](https://travis-ci.org/yahoo/fluxible)\n[![Coverage Status](https://img.shields.io/coveralls/yahoo/fluxible.svg)](https://coveralls.io/r/yahoo/fluxible?branch=master)\n[![Dependency Status](https://img.shields.io/david/yahoo/fluxible.svg)](https://david-dm.org/yahoo/fluxible)\n[![devDependency Status](https://img.shields.io/david/dev/yahoo/fluxible.svg)](https://david-dm.org/yahoo/fluxible#info=devDependencies)\n\nPluggable, singleton-free container for isomorphic [Flux](https://github.com/facebook/flux) applications.\n\n```bash\n$ npm install --save fluxible\n```\n\nJoin the #fluxible channel of the [Reactiflux](http://reactiflux.com) Slack community.\n\n[![Gitter chat](https://badges.gitter.im/gitterHQ/gitter.png)](https://gitter.im/yahoo/fluxible)\n\n## Docs\n\n * [Quick Start](https://github.com/yahoo/fluxible/blob/master/docs/quick-start.md)\n * [API](https://github.com/yahoo/fluxible/blob/master/docs/api/README.md)\n\n## Features\n\n * Singleton-free for server rendering\n * [Store](https://github.com/yahoo/fluxible/blob/master/docs/api/Stores.md) dehydration for client bootstrapping\n * Stateless async [actions](https://github.com/yahoo/fluxible/blob/master/docs/api/Actions.md)\n * Higher order [components](https://github.com/yahoo/fluxible/blob/master/docs/api/Components.md) for easy integration\n * Enforcement of Flux flow - restricted access to the [Flux interface](https://github.com/yahoo/fluxible/blob/master/docs/api/FluxibleContext.md) from within components\n * [Pluggable](https://github.com/yahoo/fluxible/blob/master/docs/api/Plugins.md) - add your own interfaces to the Flux context\n * Updated for React 0.13\n\n## Extras\n\n * [Yeoman generator](https://github.com/yahoo/generator-fluxible)\n * [Example Applications](https://github.com/yahoo/flux-examples)\n * [Fluxible Routing](https://github.com/yahoo/fluxible-router)\n * [Isomorphic Data Services](https://github.com/yahoo/fluxible-plugin-fetchr)\n\n## Usage\n\n```js\nimport Fluxible from 'fluxible';\nimport {createStore} from 'fluxible/addons';\nimport {\n    connectToStores,\n    createElementWithContext,\n    provideContext\n} from 'fluxible-addons-react';\nimport React from 'react';\n\n// Action\nconst action = (actionContext, payload) => {\n    actionContext.dispatch('FOO_ACTION', payload);\n};\n\n// Store\nconst FooStore = createStore({\n    storeName: 'FooStore',\n    handlers: {\n        'FOO_ACTION': 'fooHandler'\n    },\n    initialize: function () { // Set the initial state\n        this.foo = null;\n    },\n    fooHandler: function (payload) {\n        this.foo = payload;\n    },\n    getState: function () {\n        return {\n            foo: this.foo\n        }\n    }\n});\n\n// Component\nclass App extends React.Component {\n    render() {\n        return <span>{this.props.foo}</span>\n    }\n}\n\nApp = provideContext(connectToStores(App, [FooStore], (context, props) => {\n    return context.getStore(FooStore).getState();\n}));\n\n// App\nconst app = new Fluxible({\n    component: App,\n    stores: [FooStore]\n});\n\n// Bootstrap\nconst context = app.createContext();\ncontext.executeAction(action, 'bar', (err) => {\n    console.log(React.renderToString(createElementWithContext(context)));\n});\n```\n\n## License\n\nThis software is free to use under the Yahoo Inc. BSD license.\nSee the [LICENSE file][] for license text and copyright information.\n\n[LICENSE file]: https://github.com/yahoo/fluxible/blob/master/LICENSE.md\n",
  "readmeFilename": "README.md",
  "gitHead": "72073a9dca0370b9d895b0f39c57fdcbbd37e902",
  "bugs": {
    "url": "https://github.com/yahoo/fluxible/issues"
  },
  "homepage": "https://github.com/yahoo/fluxible",
  "_id": "fluxible@0.5.4",
  "_shasum": "7221dc3e8e554bbf4a4691688f5d2df53fba16b7",
  "_from": "fluxible@>0.3.0"
}
